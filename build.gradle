buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.sonarqube' version '2.7'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

dependencies {
    dependencies {
        // new Jakarta libraries
        implementation 'com.sun.mail:jakarta.mail:2.0.1'
        implementation 'com.sun.mail:imap:2.0.1'

        implementation 'commons-cli:commons-cli:1.4'
        implementation 'org.apache.commons:commons-lang3:3.14.0'

        implementation 'com.h2database:h2:1.4.200'



        // Test dependencies
        testCompile 'org.junit.jupiter:junit-jupiter:5.8.1'
        testCompile 'org.mockito:mockito-core:3.12.4'
        testCompile 'org.hamcrest:hamcrest:2.2'
        testCompile 'org.jmockit:jmockit:1.49'
    }
}

group = 'com.marcnuri'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
sourceCompatibility = 1.8

mainClassName = 'com.marcnuri.mnimapsync.MNIMAPSync'

test {
    testLogging {
        exceptionFormat = 'full'
    }
    jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task fatJar(type: Jar, group: BasePlugin.BUILD_GROUP) {
    manifest {
        attributes (
            'Main-Class': mainClassName,
            'Class-Path': configurations.runtime.files.collect { "$it.name" }.join(' ')
        )
    }
    archiveBaseName = project.name
    archiveVersion = ''
    archiveClassifier = 'all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
